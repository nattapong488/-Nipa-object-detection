import { SdkOption } from "../models/SdkOption";
import { NvisionParameter, ParameterParser } from "../utils/IParameterParser";
import { NvisionRequest } from "../models/NvisionRequest";
export interface ObjectDetectionParameter extends NvisionParameter {
    frameId?: string;
    sourceId?: string;
    outputCroppedImage?: boolean;
    confidenceThreshold?: number;
    outputVisualizedImage?: boolean;
}
export declare const ObjectDetectionParameterParser: ParameterParser<ObjectDetectionParameter>;
declare const ObjectDetectionService: (options: SdkOption) => {
    predict: (params: ObjectDetectionParameter) => Promise<NvisionRequest>;
    stream: () => {
        on: (event: string, listener: (eventArgs: any) => unknown) => void;
        once: (event: string, listener: (eventArgs: any) => unknown) => void;
        connect: () => Promise<unknown>;
        predict: (params: ObjectDetectionParameter) => Promise<void>;
    };
};
export default ObjectDetectionService;
